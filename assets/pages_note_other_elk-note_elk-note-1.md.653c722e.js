import{_ as l,o as a,c as i,e}from"./app.e06d76d1.js";const g=JSON.parse('{"title":"初识elk","description":"","frontmatter":{},"headers":[],"relativePath":"pages/note/other/elk-note/elk-note-1.md","filePath":"pages/note/other/elk-note/elk-note-1.md","lastUpdated":1700115938000}'),t={name:"pages/note/other/elk-note/elk-note-1.md"},o=e('<h1 id="初识elk" tabindex="-1">初识elk <a class="header-anchor" href="#初识elk" aria-label="Permalink to &quot;初识elk&quot;">​</a></h1><blockquote><p><a href="https://www.elastic.co/guide/cn/kibana/current/index.html" target="_blank" rel="noreferrer">官方说明手册传送门</a></p></blockquote><h2 id="_1-适用对象" tabindex="-1">1. 适用对象 <a class="header-anchor" href="#_1-适用对象" aria-label="Permalink to &quot;1. 适用对象&quot;">​</a></h2><ul><li>对各种数据可视化需求并期望找到一个解决方案的同学</li><li>希望对运维有一些了解的同学</li><li>本文档需要有一些基础的互联网开发知识，对ElasticSearch有了解</li></ul><h2 id="_2-elk家族介绍" tabindex="-1">2. elk家族介绍 <a class="header-anchor" href="#_2-elk家族介绍" aria-label="Permalink to &quot;2. elk家族介绍&quot;">​</a></h2><blockquote><p>在实际工作中，我们每天都会有很多的数据需要收集、处理、分析，elk提供了这个需求的整体解决方案</p></blockquote><ul><li>e =&gt; ElasticSearch <ul><li>是一个实时的分布式搜索引擎，他可以用于全文搜索，结构化搜索及分析。</li><li>在ElasticSearch中，我们可以存储海量的数据</li><li>简称为es</li></ul></li><li>l =&gt; Logstash <ul><li>是ELK的数据收集、分发工具，用于不同目标收集不同格式的数据，经过格式化处理后输出到不同的存储目标 。</li></ul></li><li>k =&gt; Kibana <ul><li>提供了可视化的平台，他可以在ElasticSearch的索引中查找、交互数据，并生成各种表格、图形等。便于进行数据分析的工作 。</li></ul></li><li>在elk家族中，Logstash负责收集各种类型的数据进行处理，然后把这些海量的数据入库到ElasticSearch中，最终由Kibana负责数据的可视化展示</li></ul><h2 id="_3-kibana安装" tabindex="-1">3. kibana安装 <a class="header-anchor" href="#_3-kibana安装" aria-label="Permalink to &quot;3. kibana安装&quot;">​</a></h2><blockquote><p><a href="https://www.elastic.co/cn/kibana" target="_blank" rel="noreferrer">kibana</a></p></blockquote><ul><li>如果ElasticSearch、Logstash、Kibana要一起合用，大版本要一致</li><li>安装X-pack插件用来身份验证 <ul><li>用户 =&gt; X-pack =&gt; Kibana</li></ul></li><li>不建议ELK系列软件使用root用户运行 <ul><li>可以创建一个elastic用户</li></ul></li><li>下载命令： <ul><li><code>wget https://artifacts.elastic.co/downloads/kibana/kibana-7.11.2-x86_64.tar.gz =&gt; 49M</code></li></ul></li><li>解压： <ul><li><code>tar -zxvf kibana-7.11.2-linux-x86_64.tar.gz</code></li><li>之后可以重命名一下:<code>mv kibana-7.11.2-linux-x86_64 kibana</code></li><li>放到local中: <code>mv kibana /usr/local/</code></li></ul></li><li>配置 <ul><li>进到主目录 =&gt; <code>cd /usr/local/kibana</code></li><li>主要有四个文件夹需要注意 <ul><li>bin =&gt; kibana可执行应用程序目录，包含kibana和安装插件的kibana-plugin等 <ul><li>安装身份验证插件x-pack:<code>/usr/local/kibana/bin/kibana-plugin install x-pack</code></li><li>他会自动去找对应版本的x-pack插件，下载然后安装</li></ul></li><li>config <ul><li>kibana的配置文件目录，包含kibana.yml文件</li><li>cd config =&gt; 找到kibana.yml</li><li>vim kibana.yml</li><li>我们的主要配置 <ul><li>server.port =&gt; 5601</li><li>server.host =&gt; 0.0.0.0</li><li>server.name =&gt; kibana</li><li>elasticsearch.url =&gt; ES实例地址</li><li>elasticsearch.username =&gt; 链接ES时使用的用户名 <ul><li>这个用户需要具有manager权限，不然会报错，因为kibana也需要有往里面存数据等操作</li></ul></li><li>elasticsearch.password =&gt; 链接ES时使用的密码</li><li>kibana.index =&gt; .kibana</li><li>xpack.security.encrypitopnKey =&gt; 随便写一个但需要长度为32位的字符串</li></ul></li><li>详细配置说明详见kibana配置项</li></ul></li><li>data kibana或kibana插件写数据的存储目录</li><li>plugins 插件目录，kibana的每一个插件都会存在该目录</li></ul></li></ul></li><li>启动 <ul><li><code>/usr/local/kibana/bin/kibana</code></li><li><code>nohub /usr/local/kibana/bin/kibana &gt; /dev/null &amp;</code> =&gt; 后台运行</li><li>初始化用户名: kibana / 初始密码: changeme</li></ul></li></ul><h2 id="_4-kibana配置项" tabindex="-1">4. kibana配置项 <a class="header-anchor" href="#_4-kibana配置项" aria-label="Permalink to &quot;4. kibana配置项&quot;">​</a></h2><ul><li><code>server.port</code> =&gt; kibana绑定的端口号，默认是5601</li><li><code>server.host</code> =&gt; 默认是localhost</li><li><code>server.name</code> =&gt; 实例名称，默认主机名</li><li><code>kibana.defaultAppId</code> =&gt; 进入kibana时加载的应用，默认是discover</li><li><code>eleasticsearch.url</code> =&gt; ES实例地址，用来处理所有的查询请求，默认是 <code>http://localhost:9200</code></li><li><code>eleasticsearch.username</code> =&gt; 链接ES时使用的用户名，如果ES没有设置用户权限，此项可不以启用</li><li><code>eleasticsearch.password</code> =&gt; 链接ES时使用的密码，如果ES没有设置用户权限，此项可不以启用</li><li><code>kibana.index</code> =&gt; kibana需要在ES中创建一个索引来存储kibana的搜索、可视化和仪表盘的数据。如果该索引不存在，则会自动创建，默认是.kibana</li><li><code>elasticsearch.pingTimeout</code> =&gt; 设置请求ES的响应超时时间，单位毫秒，默认是elasticsearch.requestTimeout</li><li><code>elasticsearch.requestTimeout</code> =&gt; ES响应超时时间(毫秒)，该值必须为正整数，默认3000</li><li><code>elasticsearch.shardTimeout</code> =&gt; ES等待碎片响应的时间(毫秒)。设置为0以禁用。默认值为0</li><li><code>logging.dest</code> =&gt; kibana日志输出文件，默认是stdout</li><li><code>logging.slient</code> =&gt; 设置改配置，所有日志都输出，默认是false</li><li><code>xpack.security.encrypitopnKey</code> =&gt; 加密秘钥，防止密码被暴力破解 <ul><li>原先没有，要自己加，最后一个key是大写</li><li><a href="https://www.elastic.co/guide/en/kibana/current/settings.html" target="_blank" rel="noreferrer">更多配置传送带</a></li></ul></li></ul><h2 id="_5-kibana汉化" tabindex="-1">5. kibana汉化 <a class="header-anchor" href="#_5-kibana汉化" aria-label="Permalink to &quot;5. kibana汉化&quot;">​</a></h2><blockquote><p>这个过程是不可逆的，汉化工具是直接修改原始Kibana程序里面的文字来进行汉化的，如果要改回来，需要重装</p></blockquote><ul><li>kibana的配置文件目录，包含kibana.yml文件</li><li>修改kibana.yml文件最后一行</li><li>改成<code>i18n.local:&quot;zh-CN&quot;</code></li><li>重启</li></ul>',15),c=[o];function n(r,s,k,d,u,b){return a(),i("div",null,c)}const p=l(t,[["render",n]]);export{g as __pageData,p as default};
