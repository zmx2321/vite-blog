import{_ as s,o as n,c as a,e as l}from"./app.ca27aefb.js";const u=JSON.parse('{"title":"openlayer的简单使用说明","description":"","frontmatter":{},"headers":[],"relativePath":"pages/note/front/gis-note/openlayer-note-1.md","filePath":"pages/note/front/gis-note/openlayer-note-1.md","lastUpdated":1714097979000}'),p={name:"pages/note/front/gis-note/openlayer-note-1.md"},o=l(`<h1 id="openlayer的简单使用说明" tabindex="-1">openlayer的简单使用说明 <a class="header-anchor" href="#openlayer的简单使用说明" aria-label="Permalink to &quot;openlayer的简单使用说明&quot;">​</a></h1><h2 id="openlayer修改feature坐标系" tabindex="-1">openlayer修改Feature坐标系 <a class="header-anchor" href="#openlayer修改feature坐标系" aria-label="Permalink to &quot;openlayer修改Feature坐标系&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { transform, fromLonLat, toLonLat } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;ol/proj&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 假设feature是已有的Feature对象</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> feature </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">/* 你的Feature对象 */</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 从EPSG:4326转换到EPSG:3857</span></span>
<span class="line"><span style="color:#E1E4E8;">feature.</span><span style="color:#B392F0;">getGeometry</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">transform</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;EPSG:4326&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;EPSG:3857&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 或者使用内置的 fromLonLat 和 toLonLat 函数</span></span>
<span class="line"><span style="color:#E1E4E8;">feature.</span><span style="color:#B392F0;">getGeometry</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">applyTransform</span><span style="color:#E1E4E8;">(fromLonLat);</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 如果需要反向操作，即从EPSG:3857转换到EPSG:4326</span></span>
<span class="line"><span style="color:#E1E4E8;">feature.</span><span style="color:#B392F0;">getGeometry</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">transform</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;EPSG:3857&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;EPSG:4326&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 或者使用内置的 fromLonLat 和 toLonLat 函数</span></span>
<span class="line"><span style="color:#E1E4E8;">feature.</span><span style="color:#B392F0;">getGeometry</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">applyTransform</span><span style="color:#E1E4E8;">(toLonLat);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { transform, fromLonLat, toLonLat } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;ol/proj&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 假设feature是已有的Feature对象</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> feature </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">/* 你的Feature对象 */</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 从EPSG:4326转换到EPSG:3857</span></span>
<span class="line"><span style="color:#24292E;">feature.</span><span style="color:#6F42C1;">getGeometry</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">transform</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;EPSG:4326&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;EPSG:3857&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 或者使用内置的 fromLonLat 和 toLonLat 函数</span></span>
<span class="line"><span style="color:#24292E;">feature.</span><span style="color:#6F42C1;">getGeometry</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">applyTransform</span><span style="color:#24292E;">(fromLonLat);</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 如果需要反向操作，即从EPSG:3857转换到EPSG:4326</span></span>
<span class="line"><span style="color:#24292E;">feature.</span><span style="color:#6F42C1;">getGeometry</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">transform</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;EPSG:3857&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;EPSG:4326&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 或者使用内置的 fromLonLat 和 toLonLat 函数</span></span>
<span class="line"><span style="color:#24292E;">feature.</span><span style="color:#6F42C1;">getGeometry</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">applyTransform</span><span style="color:#24292E;">(toLonLat);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="经纬度转屏幕坐标" tabindex="-1">经纬度转屏幕坐标 <a class="header-anchor" href="#经纬度转屏幕坐标" aria-label="Permalink to &quot;经纬度转屏幕坐标&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { fromLonLat, toLonLat } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;ol/proj&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 定义一个经纬度点</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">lonLatPoint</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">123.456</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">7.89</span><span style="color:#E1E4E8;">]; </span><span style="color:#6A737D;">// 经度, 纬度</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 将经纬度转换为屏幕坐标</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">pixelPoint</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fromLonLat</span><span style="color:#E1E4E8;">(lonLatPoint);</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 将屏幕坐标转换为经纬度</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">convertedLonLatPoint</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">toLonLat</span><span style="color:#E1E4E8;">(pixelPoint);</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(pixelPoint); </span><span style="color:#6A737D;">// 输出屏幕坐标</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(convertedLonLatPoint); </span><span style="color:#6A737D;">// 输出经纬度</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { fromLonLat, toLonLat } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;ol/proj&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 定义一个经纬度点</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">lonLatPoint</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">123.456</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">7.89</span><span style="color:#24292E;">]; </span><span style="color:#6A737D;">// 经度, 纬度</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 将经纬度转换为屏幕坐标</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">pixelPoint</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fromLonLat</span><span style="color:#24292E;">(lonLatPoint);</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 将屏幕坐标转换为经纬度</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">convertedLonLatPoint</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">toLonLat</span><span style="color:#24292E;">(pixelPoint);</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(pixelPoint); </span><span style="color:#6A737D;">// 输出屏幕坐标</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(convertedLonLatPoint); </span><span style="color:#6A737D;">// 输出经纬度</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>`,5),e=[o];function r(t,c,E,y,i,m){return n(),a("div",null,e)}const F=s(p,[["render",r]]);export{u as __pageData,F as default};
