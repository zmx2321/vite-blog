import{_ as u,r as l,o as r,c as o,a as i,w as s,b as e,d as n,e as h}from"./app.1d3e5273.js";const w=JSON.parse('{"title":"对自身情况做一个检查","description":"","frontmatter":{},"headers":[],"relativePath":"about/about-my-work.md","filePath":"about/about-my-work.md","lastUpdated":1704692778000}'),c={name:"about/about-my-work.md"},d=e("h1",{id:"对自身情况做一个检查",tabindex:"-1"},[n("对自身情况做一个检查 "),e("a",{class:"header-anchor",href:"#对自身情况做一个检查","aria-label":'Permalink to "对自身情况做一个检查"'},"​")],-1),b=h('<blockquote><p>对自身情况做一个检查</p></blockquote><h2 id="_1-准备一段自我介绍" tabindex="-1">1. 准备一段自我介绍 <a class="header-anchor" href="#_1-准备一段自我介绍" aria-label="Permalink to &quot;1. 准备一段自我介绍&quot;">​</a></h2><blockquote><p>我就主要讲讲我的工作和学习经历吧</p></blockquote><h3 id="_1-关于工作经历" tabindex="-1">1. 关于工作经历 <a class="header-anchor" href="#_1-关于工作经历" aria-label="Permalink to &quot;1. 关于工作经历&quot;">​</a></h3><p>       我毕业之后一直在做前端这块，最开始是用jquery做的开发，那时候主要做一些商场系统或一些官网页面，有移动的端的也有pc的，有时候也会用jquery各种库做一些动效，做各种适配和兼容，那时候用的UI框架基本上是bootstrap，esui之类的，不过大部分是自己布局的，我的css也是那时候熟练起来的 <br>        之后在一家公司，那时候小程序出来用小程序做了一个简易的商城，再在之后就接触到mvvm了，最开始的时候主要学习和使用的是vue，直到现在为止最常用的全家桶是vue2+vuecli4x，主要做过各种后台管理系统，阿里的ant以及element框架都有用到过，移动端主要是用Vant以及饿了么的mint框架，在开发的同时，自己也封装过各种小组件，像富文本、国际化、上传、进度条、pdf等等 <br>        我任职的有家公司是做大屏可视化的，因为也是初创公司，人员比较少，当时我是技术负责人，里面有很多东西，包括对各种三维数据的了解以及处理，前端接口如何与硬件设备对接，前端框架如何与cesium库结合等，我都是从什么都不懂慢慢摸索过来的，当时我的主要工作是将三维场景跑起来，然后做一些三维场景功能的demo，像对小模型、视点、巡更、气泡、标注等的工具增删改查、模型单体化、视频融合等功能给组员，让他们去做业务的开发，同时做一些表格把控项目进度 <br>        上家公司业务方面就不赘述了，主要还是做后台管理系统，后面由于业务原因要做数据中台，所以把elk相关知识好好啃了一遍，主要难点是es数据与vue的结合，以及es的语法，es有些接近mongodb这种结构化语法，由于是数据中台，有些数据来源需要用爬虫，我又用node做了点爬虫的工作，查了各种资料，最终还是用了nightmare和puppetter这两个库来爬取数据并存到mysql数据库里面</p><h3 id="_2-关于学习" tabindex="-1">2. 关于学习 <a class="header-anchor" href="#_2-关于学习" aria-label="Permalink to &quot;2. 关于学习&quot;">​</a></h3><p>       关于学习的话，学习的时候以及工作中解决了问题之后，经常会忘，总要反复查资料，后来养成了记笔记的习惯，最开始是用csdn，后来在印象笔记里面，后面越来越觉得找起来有些费力，同时发现别人写的博客感觉很厉害，心痒羡慕的同时，也发现有些东西身边的朋友也需要，如果有博客就可以很方便的把自己的想法分享给别人，同时也可以和朋友一起相互督促学习，想着博客总归都是前端知识，就动起了自己搭一个博客的年头，于是自己琢磨出了vuepress的博客，到目前为止，所有学习笔记都记录在博客上面，同时也有对应学习笔记的源码放在GitHub上，我的博客不定期地在更新，现在有几个朋友也是在看我的博客学习，所以我应该会一直更新下去 <br>        有段时间，在做开发的时候，特别是查一些文档，感觉心有余力不足，后面发现是自己面向对象的思想有些薄弱，又学了一些java基础的一些东西，同时对js面向对象的相关知识点进行查漏补缺，后面了解到ts也了解了一些，同时做了一个vue+ts的小demo <br>        前端技术日新月异，所以有时候一有时间就会零碎的学一些东西，所以对note、ts、webpack都有一些简单的理解，不过后期的话，我应该不会这么零散地去学习，本身做博客就是为了整合知识点，目前主要还是希望在大前端这条路上发展吧，现阶段主要系统过完react以及node+ts的知识点，后面有余力应该会再啃一些flutter和electrion的东西</p><h2 id="_2-整理一下之前的业务场景" tabindex="-1">2. 整理一下之前的业务场景 <a class="header-anchor" href="#_2-整理一下之前的业务场景" aria-label="Permalink to &quot;2. 整理一下之前的业务场景&quot;">​</a></h2><h3 id="_2-1-三维可视化" tabindex="-1">2.1. 三维可视化 <a class="header-anchor" href="#_2-1-三维可视化" aria-label="Permalink to &quot;2.1. 三维可视化&quot;">​</a></h3><h4 id="_2-1-1-三维可视化知识点" tabindex="-1">2.1.1 三维可视化知识点 <a class="header-anchor" href="#_2-1-1-三维可视化知识点" aria-label="Permalink to &quot;2.1.1 三维可视化知识点&quot;">​</a></h4><blockquote><p>对于三维场景的学习主要还是公司业务上学习到的，所以理解总结的或许有些地方不到位，但我会尽可能保证准确性以及完整性</p></blockquote><h5 id="_2-1-1-1-三维可视化有哪些主流公司" tabindex="-1">2.1.1.1 三维可视化有哪些主流公司 <a class="header-anchor" href="#_2-1-1-1-三维可视化有哪些主流公司" aria-label="Permalink to &quot;2.1.1.1 三维可视化有哪些主流公司&quot;">​</a></h5><blockquote><p>仅限于我了解到的</p></blockquote><ul><li><a href="http://www.marsgis.cn" target="_blank" rel="noreferrer">火星科技</a></li><li><a href="https://www.supermap.com/" target="_blank" rel="noreferrer">超图</a></li></ul><h5 id="_2-1-1-2-三维可视化有哪些主要的引擎" tabindex="-1">2.1.1.2. 三维可视化有哪些主要的引擎 <a class="header-anchor" href="#_2-1-1-2-三维可视化有哪些主要的引擎" aria-label="Permalink to &quot;2.1.1.2. 三维可视化有哪些主要的引擎&quot;">​</a></h5><ul><li>webgl <ul><li>three.js</li><li>cesium.js <ul><li>marsv.js =&gt; 火星科技，在cesium的基础上封装</li></ul></li></ul></li></ul><h5 id="_2-1-13-我了解到的三维可视化知识点" tabindex="-1">2.1.13. 我了解到的三维可视化知识点 <a class="header-anchor" href="#_2-1-13-我了解到的三维可视化知识点" aria-label="Permalink to &quot;2.1.13. 我了解到的三维可视化知识点&quot;">​</a></h5><blockquote><p>主要是cesium</p></blockquote><ul><li>加载地球 <ul><li>加载地球底图 <ul><li>底图类型 <ul><li>天地图</li><li>高德地图</li><li>谷歌地图</li><li>百度地图</li><li>微软地图 =&gt; bingMap</li></ul></li><li>底图功能 <ul><li>基础底图 <ul><li>可显示所在点的经度、纬度、海拔、方向以及视高</li></ul></li><li>复位底图 <ul><li>点击后回到指定视区</li></ul></li><li>视图 <ul><li>可切换三维视图、二维视图、哥伦布视图</li></ul></li><li>全屏</li><li>方向盘操作 <ul><li>按下鼠标左键并向四周拖拽不释放可修改视图角度，双击重置视图；单击并拖拽旋转，修改视角方向</li></ul></li><li>鼠标右键 <ul><li>可显示此处经纬度、显示当前视角信息、开启光照效果、开启深度检测、绕此处环绕飞行、移动到此处、第一视角站到此处</li></ul></li></ul></li><li>注意事项 <ul><li>主要是一些地图的底图，每个地图加密算法不一样，坐标点不一样，天地图未经过加密，其他地图坐标都是通过天地图的坐标转换而来的</li></ul></li></ul></li><li>加载地球模型 <ul><li>主要用3dtiles来加载模型 <ul><li>主要用<a href="http://www.cesiumlab.com/" target="_blank" rel="noreferrer">cesiumlab</a>工具处理导出</li><li>3D Tiles是用于流式传输大规模异构3D地理空间数据集的开放规范。为了扩展Cesium的地形和图像流，3D Tiles将用于流式传输3D内容，包括建筑物，树木，点云和矢量数据。</li><li>3D Tiles是由一个从一开始就使用WebGL的团队设计的，而OpenGL在此之前已经使用了很多年。因此，与glTF一样，从接收3D Tile到使用WebGL渲染3DTF的流程简化为快速简单，并最大限度地减少客户端处理。为了减少WebGL绘制调用的数量，可以预先批量处理或批量处理切片。</li><li>3dtiles有两种方法直接获取模型数据，第一个是用geojson盖在上面，第二个是处理模型的时候分开，然后用单体化的类去获取</li></ul></li></ul></li><li>加载模型数据格式（这里的都是较大场景） <ul><li>单模型场景 <ul><li>即把所有场景效果改成false</li></ul></li><li>倾斜摄影 <ul><li>原格式为osgb，由无人机飞行得来，用cesiumlab可以转化成3dtiles</li></ul></li><li>城市建筑白模 <ul><li>原格式为dae，因为没有贴图，模型较小，用cesiumlab可以转化成3dtiles</li></ul></li><li>人工模型 <ul><li>原格式为dae，在白模的基础上加上贴图，有精模和简模之分，模型很大</li></ul></li><li>bim数据 <ul><li>建筑模型，单体化比较好做，原格式为dae，用cesiumlab可以转化成3dtiles</li></ul></li></ul></li><li>小模型加载 =&gt; gltf <ul><li>GLTF——3D图形界的JPEG</li><li>glTF(GL TransmissionFormat)，即图形语言交换格式，它是一种3D内容的格式标准，由Khronos Group管理（Khronos Group还管理着OpenGL系列、OpenCL等重要的行业标准）；</li><li>glTF的设计是面向实时渲染应用的，尽量提供可以直接传输给图形API的数据形式，不再需要二次转换</li><li>glTF对OpenGL ES、WebGL非常友好</li><li>glTF的目标是：3D领域的JPEG</li><li>作为一个标准，自2015年10月发布（glTF 1.0）以来，已经得到了业界广泛的认可，你可以相信它的水平</li><li>GLTF具体的信息可以去官方网站上看：<a href="https://www.khronos.org/gltf/" target="_blank" rel="noreferrer">https://www.khronos.org/gltf/</a></li></ul></li></ul></li><li>地球标注 <ul><li>单个点 <ul><li>点、图标点、文字、小模型</li></ul></li><li>二维空间、二维贴地 <ul><li>有深度检测功能</li><li>线、曲线、面、圆、矩形</li></ul></li><li>三维空间 <ul><li>墙、立体、圆柱体、矩形体</li></ul></li></ul></li><li>场景控制 <ul><li>开场动画</li><li>旋转的地球</li><li>双屏对比 <ul><li>加载不同的地球底图</li></ul></li><li>鹰眼 <ul><li>小地图</li><li>大部分是二维地图</li></ul></li></ul></li><li>巡更漫游 <ul><li>显示隐藏巡更线</li><li>增删改巡更路线</li><li>开始巡更、停止巡更、暂停巡更</li><li>打开关闭深度检测</li><li>开启摄像头 <ul><li>巡更到某个位置会打开摄像头</li><li>监控视频格式主要是*.w3u8</li><li>主要使用videojs插件</li></ul></li></ul></li></ul><h4 id="_2-1-2-三维可视化业务场景" tabindex="-1">2.1.2 三维可视化业务场景 <a class="header-anchor" href="#_2-1-2-三维可视化业务场景" aria-label="Permalink to &quot;2.1.2 三维可视化业务场景&quot;">​</a></h4><h5 id="_2-1-2-1-模型部分" tabindex="-1">2.1.2.1 模型部分 <a class="header-anchor" href="#_2-1-2-1-模型部分" aria-label="Permalink to &quot;2.1.2.1 模型部分&quot;">​</a></h5><ul><li>加载模型</li><li>标注的增删改查</li><li>视点的增删改查</li><li>巡更的增删改查 <ul><li>关键点事件处理(一般是加载视频)</li></ul></li><li>其他 <ul><li>单体化……</li><li>视频投影……</li></ul></li></ul><h5 id="_2-1-2-2-硬件设备" tabindex="-1">2.1.2.2 硬件设备 <a class="header-anchor" href="#_2-1-2-2-硬件设备" aria-label="Permalink to &quot;2.1.2.2 硬件设备&quot;">​</a></h5><ul><li>需要对接一些硬件设备信息 <ul><li>展现方式为标注</li><li>硬件设备信息详情主要是： <ul><li>文字信息(大部分不是实时的)</li><li>图片信息(需要实时或者普通接口)</li><li>视频-摄像头(一般使用hls进行对接【对方提供*.m3u8格式视频流】)</li></ul></li></ul></li></ul><h5 id="_2-1-2-3-统计图" tabindex="-1">2.1.2.3 统计图 <a class="header-anchor" href="#_2-1-2-3-统计图" aria-label="Permalink to &quot;2.1.2.3 统计图&quot;">​</a></h5><ul><li>二维或者三维，统计设备信息</li></ul><h5 id="_2-1-2-4-布局" tabindex="-1">2.1.2.4. 布局 <a class="header-anchor" href="#_2-1-2-4-布局" aria-label="Permalink to &quot;2.1.2.4. 布局&quot;">​</a></h5><ul><li>设备报警信息放哪里</li><li>相关统计图放的位置</li><li>哪些页面放哪些模块</li></ul><h3 id="_2-2-后台管理" tabindex="-1">2.2. 后台管理 <a class="header-anchor" href="#_2-2-后台管理" aria-label="Permalink to &quot;2.2. 后台管理&quot;">​</a></h3><ul><li>封装了axios</li><li>配置了nginx，使vue使用proxy之后打包可以正常运行</li><li>封装了若干插件 <ul><li>进度条、上传、 quill 富文本、使用 i18n 实现国际化等</li></ul></li></ul>',30);function _(m,p,q,k,f,g){const a=l("Valine"),t=l("ClientOnly");return r(),o("div",null,[d,i(t,null,{default:s(()=>[i(a)]),_:1}),b])}const P=u(c,[["render",_]]);export{w as __pageData,P as default};
//# sourceMappingURL=about_about-my-work.md.950d624a.js.map
