import{_ as s,o as a,c as n,e as l}from"./app.4d0300d2.js";const E=JSON.parse('{"title":"python基本概念","description":"","frontmatter":{},"headers":[],"relativePath":"pages/note/back/python-note/python-course-note-1.md","filePath":"pages/note/back/python-note/python-course-note-1.md","lastUpdated":1741655084000}'),o={name:"pages/note/back/python-note/python-course-note-1.md"},e=l(`<h1 id="python基本概念" tabindex="-1">python基本概念 <a class="header-anchor" href="#python基本概念" aria-label="Permalink to &quot;python基本概念&quot;">​</a></h1><h2 id="python基础学完之后可以做那些事情-选一个方向" tabindex="-1">python基础学完之后可以做那些事情(选一个方向) <a class="header-anchor" href="#python基础学完之后可以做那些事情-选一个方向" aria-label="Permalink to &quot;python基础学完之后可以做那些事情(选一个方向)&quot;">​</a></h2><ul><li>游戏开发</li><li>运维自动化</li><li>测试自动化</li><li>逆向爬虫</li><li>数据分析</li><li>小程序</li></ul><h2 id="变量传递" tabindex="-1">变量传递 <a class="header-anchor" href="#变量传递" aria-label="Permalink to &quot;变量传递&quot;">​</a></h2><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">x </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 单独开一个空间存x</span></span>
<span class="line"><span style="color:#E1E4E8;">y </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> x  </span><span style="color:#6A737D;"># 此时x和y同时指向同一个内存空间,这个空间有两个变量同时指向这个空间</span></span>
<span class="line"><span style="color:#E1E4E8;">x </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 单独开一个空间存x, 此时x指向新的空间，y还是指向原来的空间</span></span>
<span class="line"><span style="color:#6A737D;"># print(x, y)  # 此时只有y指向最开始的内存空间,内存空间还有指向,所以不会被销毁</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">x </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 单独开一个空间存x</span></span>
<span class="line"><span style="color:#24292E;">y </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> x  </span><span style="color:#6A737D;"># 此时x和y同时指向同一个内存空间,这个空间有两个变量同时指向这个空间</span></span>
<span class="line"><span style="color:#24292E;">x </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 单独开一个空间存x, 此时x指向新的空间，y还是指向原来的空间</span></span>
<span class="line"><span style="color:#6A737D;"># print(x, y)  # 此时只有y指向最开始的内存空间,内存空间还有指向,所以不会被销毁</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="python命名规范" tabindex="-1">python命名规范 <a class="header-anchor" href="#python命名规范" aria-label="Permalink to &quot;python命名规范&quot;">​</a></h2><ul><li>变量名只能是 字母、数字或下划线的任意组合</li><li>变量名的第一个字符不能是数字</li></ul><h2 id="python数据类型" tabindex="-1">python数据类型 <a class="header-anchor" href="#python数据类型" aria-label="Permalink to &quot;python数据类型&quot;">​</a></h2><ul><li>整数</li><li>浮点数</li><li>字符串</li><li>布尔值</li><li>空值</li><li>列表</li><li>元组</li><li>字典</li><li>集合</li></ul>`,9),p=[e];function t(r,i,c,y,h,d){return a(),n("div",null,p)}const b=s(o,[["render",t]]);export{E as __pageData,b as default};
//# sourceMappingURL=pages_note_back_python-note_python-course-note-1.md.b4ffa953.js.map
