import{_ as r,r as n,o as h,c as d,b as l,d as i,a as e,w as t,e as o}from"./app.47ab2ec8.js";const J=JSON.parse('{"title":"说说面试的那些事儿","description":"","frontmatter":{},"headers":[],"relativePath":"pages/interview/foundation/interview-foundation-1.md","filePath":"pages/interview/foundation/interview-foundation-1.md","lastUpdated":1700727486000}'),s={name:"pages/interview/foundation/interview-foundation-1.md"},_=o('<h1 id="说说面试的那些事儿" tabindex="-1">说说面试的那些事儿 <a class="header-anchor" href="#说说面试的那些事儿" aria-label="Permalink to &quot;说说面试的那些事儿&quot;">​</a></h1><p><a href="https://zmx2321.github.io/blog_code/interview/interview-one-side" target="_blank" rel="noreferrer">代码笔记</a></p><h2 id="_1-前端面试重要考点" tabindex="-1">1. 前端面试重要考点 <a class="header-anchor" href="#_1-前端面试重要考点" aria-label="Permalink to &quot;1. 前端面试重要考点&quot;">​</a></h2><ul><li>html、css</li><li>原型、作用域、异步</li><li>DOM事件、Ajax、跨域</li><li>性能优化</li><li>各种手写代码</li><li>HTTP协议</li></ul><h2 id="_2-知识点" tabindex="-1">2. 知识点 <a class="header-anchor" href="#_2-知识点" aria-label="Permalink to &quot;2. 知识点&quot;">​</a></h2><ul><li>CSS <ul><li>布局</li><li>定位</li><li>移动端响应式</li></ul></li><li>ES语法 <ul><li>原型、原型链</li><li>作用域、闭包</li><li>异步、单线程</li></ul></li><li>webApi <ul><li>DOM、BOM</li><li>Ajax跨域</li><li>事件存储</li></ul></li><li>开发环境 <ul><li>版本管理</li><li>调试抓包</li><li>打包构建</li></ul></li><li>运行环境 <ul><li>页面渲染</li><li>性能优化</li><li>web安全</li></ul></li><li>网络通讯 <ul><li>headers</li><li>RestfulApi</li><li>缓存策略</li></ul></li></ul><h2 id="_3-关于面试" tabindex="-1">3. 关于面试 <a class="header-anchor" href="#_3-关于面试" aria-label="Permalink to &quot;3. 关于面试&quot;">​</a></h2><h3 id="_3-1-面试层级" tabindex="-1">3.1. 面试层级 <a class="header-anchor" href="#_3-1-面试层级" aria-label="Permalink to &quot;3.1. 面试层级&quot;">​</a></h3><ul><li>基层工程师：基础知识</li><li>高级工程师：基础知识+项目经验</li><li>架构师：解决方案能力</li></ul><h3 id="_3-2-关于基础" tabindex="-1">3.2. 关于基础 <a class="header-anchor" href="#_3-2-关于基础" aria-label="Permalink to &quot;3.2. 关于基础&quot;">​</a></h3><ul><li>工程师的自我修养：基础知识</li><li>扎实的基础知识能让你高效地学习新技术</li></ul><h2 id="_4-面试题" tabindex="-1">4. 面试题 <a class="header-anchor" href="#_4-面试题" aria-label="Permalink to &quot;4. 面试题&quot;">​</a></h2><h3 id="_4-1-系列1" tabindex="-1">4.1. 系列1 <a class="header-anchor" href="#_4-1-系列1" aria-label="Permalink to &quot;4.1. 系列1&quot;">​</a></h3><ul><li>typeof能判断哪些类型</li><li>何时使用===，何时使用==</li><li>window.onload和DOMContentLoaded的区别</li></ul><h3 id="_4-2-系列2" tabindex="-1">4.2. 系列2 <a class="header-anchor" href="#_4-2-系列2" aria-label="Permalink to &quot;4.2. 系列2&quot;">​</a></h3><ul><li>JS创建10个<code>&lt;a&gt;</code>标签，点击的时候弹出对应序号</li><li>手写节流throttle、防抖debounce</li><li>Promise解决了什么问题</li></ul><h2 id="_5-思考" tabindex="-1">5. 思考 <a class="header-anchor" href="#_5-思考" aria-label="Permalink to &quot;5. 思考&quot;">​</a></h2><ul><li>拿到一个面试题，第一时间看到的是什么</li><li>如何看待网上搜出来的永远做不完的题海</li><li>如何对待接下来遇到的面试题</li></ul><h2 id="_6-如何搞定所有面试题" tabindex="-1">6. 如何搞定所有面试题 <a class="header-anchor" href="#_6-如何搞定所有面试题" aria-label="Permalink to &quot;6. 如何搞定所有面试题&quot;">​</a></h2><blockquote><p>解决上面的问题</p></blockquote><ul><li>拿到一个面试题，第一时间看到 =&gt; 考点</li><li>如何看待网上搜出来的永远做不完的题海 =&gt; 不变应万变 <ul><li>题可变，考点不变</li></ul></li><li>如何对待接下来遇到的面试题 =&gt; 题目到知识点，再到题目</li></ul><h2 id="_7-判断之前面试题的考点" tabindex="-1">7. 判断之前面试题的考点 <a class="header-anchor" href="#_7-判断之前面试题的考点" aria-label="Permalink to &quot;7. 判断之前面试题的考点&quot;">​</a></h2><h3 id="_7-1-系列1" tabindex="-1">7.1. 系列1 <a class="header-anchor" href="#_7-1-系列1" aria-label="Permalink to &quot;7.1. 系列1&quot;">​</a></h3>',23),c=l("li",null,[i("由考点延伸出的知识点 "),l("ul",null,[l("li",null,"值类型和引用类型的区别"),l("li",null,"引用类型的拷贝如何去做深拷贝"),l("li",null,"如何判断一个数据是不是数组或是不是对象"),l("li",null,"......")])],-1),b=l("li",null,[i("由考点延伸出的知识点 "),l("ul",null,[l("li",null,"字符串拼接有强制类型转换"),l("li",null,"if{}else{}逻辑判断的时候会有强制类型转换"),l("li",null,"......")])],-1),f=l("li",null,[i("由考点延伸出的知识点 "),l("ul",null,[l("li",null,"为什么我们要把css加载放到head里面，把js加载放在body下面")])],-1),m=l("h3",{id:"_7-2-系列2",tabindex:"-1"},[i("7.2. 系列2 "),l("a",{class:"header-anchor",href:"#_7-2-系列2","aria-label":'Permalink to "7.2. 系列2"'},"​")],-1),p=l("code",null,"<a>",-1),q=l("li",null,[i("由考点延伸出的知识点 "),l("ul",null,[l("li",null,"闭包"),l("li",null,"......")])],-1),P=l("li",null,[i("由考点延伸出的知识点 "),l("ul",null,[l("li",null,"其他的解决性能和体验优化的方法有哪些"),l("li",null,"......")])],-1),x=l("li",null,[i("由考点延伸出的知识点 "),l("ul",null,[l("li",null,"异步和同步有什么区别"),l("li",null,"为什么会有异步，异步的应用场景是什么"),l("li",null,"定时器该如何去使用"),l("li",null,"......")])],-1),k=o('<h2 id="_8-一面中涉及到的前端知识体系" tabindex="-1">8. 一面中涉及到的前端知识体系 <a class="header-anchor" href="#_8-一面中涉及到的前端知识体系" aria-label="Permalink to &quot;8. 一面中涉及到的前端知识体系&quot;">​</a></h2><h3 id="_8-1-什么是知识体系" tabindex="-1">8.1. 什么是知识体系 <a class="header-anchor" href="#_8-1-什么是知识体系" aria-label="Permalink to &quot;8.1. 什么是知识体系&quot;">​</a></h3><ul><li>知识体系：结构化的知识范围 <ul><li>涵盖所有知识点</li><li>结构化、有组织、易扩展</li></ul></li><li>高效学习三部曲：找准知识体系、刻意训练、及时反馈 <ul><li>只要是一个以知识以技术组成的行业，就必定有他自己的知识体系</li><li>在一个行业领域，都要先找准知识体系</li><li>针对知识体系里面的每一个知识点每个动作，一个一个地反复练习，不要偷懒</li><li>工作、实际做项目、面试、写文章供别人评论，或者在社区里面交流，通过这些途径，输出自己的学习成果，接收到别人对你的评价，即及时反馈</li></ul></li></ul><h3 id="_8-2-从哪些方面梳理" tabindex="-1">8.2. 从哪些方面梳理 <a class="header-anchor" href="#_8-2-从哪些方面梳理" aria-label="Permalink to &quot;8.2. 从哪些方面梳理&quot;">​</a></h3><ul><li>从行业标准去思考：W3C标准</li><li>ECMA 262标准 <ul><li>js的语法规范，诸如ES6、ES7规范</li></ul></li><li>开发环境 <ul><li>我们需要在什么基础上写一些代码(脚手架之类)</li></ul></li><li>运行环境 <ul><li>我们的代码需要在哪些地方运行</li><li>运行的时候会不会出现什么问题，以及该如何去优化</li></ul></li></ul><h2 id="_9-知识体系目录" tabindex="-1">9. 知识体系目录 <a class="header-anchor" href="#_9-知识体系目录" aria-label="Permalink to &quot;9. 知识体系目录&quot;">​</a></h2><ul><li>CSS基础知识</li><li>JS基础语法 <ul><li>原型、异步……</li></ul></li><li>JS-Web-Api <ul><li>js如何去操作dom、bom、如何去做数据通讯，如何添加dom事件……</li></ul></li><li>开发环境</li><li>运行环境</li><li>HTTP协议</li></ul><h2 id="_10-思维导图" tabindex="-1">10. 思维导图 <a class="header-anchor" href="#_10-思维导图" aria-label="Permalink to &quot;10. 思维导图&quot;">​</a></h2>',8),v=l("h2",{id:"_11-使用http-server启前端服务",tabindex:"-1"},[i("11. 使用http-server启前端服务 "),l("a",{class:"header-anchor",href:"#_11-使用http-server启前端服务","aria-label":'Permalink to "11. 使用http-server启前端服务"'},"​")],-1),w=l("ul",null,[l("li",null,[l("code",null,"npm install -g http-server")]),l("li",null,"cd到某个目录"),l("li",null,[l("code",null,"http-server -p 8881")])],-1);function S(g,T,A,C,V,D){const a=n("font"),u=n("img-viewer");return h(),d("div",null,[_,l("ul",null,[l("li",null,[i("typeof能判断哪些类型 "),l("ul",null,[l("li",null,[i("考点："),e(a,{color:"#f00"},{default:t(()=>[i("JS变量类型")]),_:1})]),c])]),l("li",null,[i("何时使用===，何时使用== "),l("ul",null,[l("li",null,[i("考点："),e(a,{color:"#f00"},{default:t(()=>[i("强制类型转换")]),_:1})]),b])]),l("li",null,[i("window.onload和DOMContentLoaded的区别 "),l("ul",null,[l("li",null,[i("考点："),e(a,{color:"#f00"},{default:t(()=>[i("页面加载过程")]),_:1})]),f])])]),m,l("ul",null,[l("li",null,[i("JS创建10个"),p,i("标签，点击的时候弹出对应序号 "),l("ul",null,[l("li",null,[i("考点："),e(a,{color:"#f00"},{default:t(()=>[i("JS作用域")]),_:1})]),q])]),l("li",null,[i("手写节流throttle、防抖debounce "),l("ul",null,[l("li",null,[i("考点："),e(a,{color:"#f00"},{default:t(()=>[i("性能、体验优化")]),_:1})]),P])]),l("li",null,[i("Promise解决了什么问题 "),l("ul",null,[l("li",null,[i("考点："),e(a,{color:"#f00"},{default:t(()=>[i("异步")]),_:1})]),x])])]),k,e(u,{src:"https://zmx2321.github.io/vite-blog/images/interview/foundation/interview.png",alt:"interview"},null,8,["src"]),v,w])}const N=r(s,[["render",S]]);export{J as __pageData,N as default};
