import{_ as e,o as u,c as a,e as t,b as l,d as i}from"./app.e6c61746.js";const C=JSON.parse('{"title":"http (前端的生命线)","description":"","frontmatter":{},"headers":[],"relativePath":"pages/interview/foundation/interview-foundation-14.md","filePath":"pages/interview/foundation/interview-foundation-14.md","lastUpdated":1699250630000}'),o={name:"pages/interview/foundation/interview-foundation-14.md"},n=t("",11),h=l("ul",null,[l("li",null,[i("简述 "),l("ul",null,[l("li",null,[i("常见的Request Headers => 请求头 "),l("ul",null,[l("li",null,"请求的时候，客户端往服务端发送的Headers")])]),l("li",null,[i("常见的Response Headers => 响应头 "),l("ul",null,[l("li",null,"服务端向客户端返回的Headers")])]),l("li",null,"headers在http请求中是一件非常重要的事情")])]),l("li",null,[i("流程 "),l("ul",null,[l("li",null,"我们访问一个url地址实际上就是发送请求"),l("li",null,[i("我们发送请求实际上要做以下步骤 "),l("ul",null,[l("li",null,"使用某个方法(get、post)去发送一个url"),l("li",null,"我们发送的请求还包括request headers")])]),l("li",null,[i("服务端接收到请求会进行返回 "),l("ul",null,[l("li",null,"服务端不止返回结果(json、页面、图片等)"),l("li",null,"服务端还会返回response headers")])])])]),l("li",null,[i("常见的Request Headers(请求头) "),l("ul",null,[l("li",null,"客户端向服务端发请求"),l("li",null,[i("Accept => 浏览器可接收的数据格式 "),l("ul",null,[l("li",null,"text/html、application/json等")])]),l("li",null,[i("Accept-Encoding => 浏览器可接收的压缩算法，如gzip "),l("ul",null,[l("li",null,"我们可以根据gzip算法把资源进行压缩(100kb大概可以压缩至30kb左右)"),l("li",null,"浏览器可以识别压缩的内容，也可以解压"),l("li",null,"浏览器告诉服务器，我能接收什么样的压缩算法，服务器就会根据Accept-Encoding的压缩算法进行压缩"),l("li",null,"前后端通用"),l("li",null,"为了保证资源更小，传输地更快一些，前端也可以正常地解压出来"),l("li",null,"表示客户端可以支持什么样的压缩算法")])]),l("li",null,"Accept-Language => 浏览器可接收的语言，如zh-CN"),l("li",null,[i("Connection：keep-alive一次TCP连接重复使用 "),l("ul",null,[l("li",null,"每次请求重新建立TCP连接会很消耗资源"),l("li",null,[i("现在的浏览器版本基本上都是支持keep-alive的 "),l("ul",null,[l("li",null,"即我们和服务端建立了连接之后，就可以重复地使用这个连接，没必要断开之后重连"),l("li",null,"重复地使用一次连接，把资源一次性请求完成")])])])]),l("li",null,[i("cookie "),l("ul",null,[l("li",null,"同域，每次请求资源的时候都会把cookie带上"),l("li",null,"浏览器自己带的")])]),l("li",null,[i("Host "),l("ul",null,[l("li",null,"请求的域名是什么")])]),l("li",null,[i("User-Agent(简称UA) => 浏览器信息 => 重点 "),l("ul",null,[l("li",null,"能标识你的浏览器信息(类型等)"),l("li",null,"服务端能够接收ua信息，可以判断用户使用的浏览器类型")])]),l("li",null,[i("Content-type "),l("ul",null,[l("li",null,"发送数据的格式，如 application/json"),l("li",null,"客户端向服务端请求，要发送一些数据的时候(post)，告诉服务端，我们这个数据是什么格式的，一般get请求是没有的，get请求主要是向服务端获取数据")])])])]),l("li",null,[i("常见的Response Headers(响应头) "),l("ul",null,[l("li",null,[i("Content-type => 返回的数据格式 "),l("ul",null,[l("li",null,"如 application/json")])]),l("li",null,"Content-length 返回数据的大小，多少字节"),l("li",null,[i("Content-Encoding => 返回数据的压缩算法，如gzip "),l("ul",null,[l("li",null,"客户端告诉服务端支持的压缩算法之后"),l("li",null,"服务端根据压缩算法进行压缩"),l("li",null,"服务端压缩之后会通过Content-Encoding告诉客户端我是用什么算法压缩的"),l("li",null,"浏览器会自动根据这个压缩算法解压")])]),l("li",null,[i("Set-Cookie "),l("ul",null,[l("li",null,"服务端改cookie的时候，通过Set-Cookie修改")])])])]),l("li",null,[i("自定义header "),l("ul",null,[l("li",null,"以上的请求头和响应头是浏览器自带的，或者服务端和浏览器配合加的"),l("li",null,"请求头和响应头实际上可以自定义header"),l("li",null,"自定义请求头的时候，需要前端访问服务的时候加上header"),l("li",null,"自定义响应头的时候，需要服务端向客户端返回之前加上header"),l("li",null,[i("使用axios做请求，其实我们可以自定义header "),l("ul",null,[l("li",{"X-Requested-With:":"",XMLHttpRequest:""},"headers:"),l("li",null,"在浏览器上的request headers里面就会多一个请求头，名字和值都可以自己定义，但不要和浏览器自带的键值冲突")])]),l("li",null,[i("使用场景 "),l("ul",null,[l("li",null,"有些接口要求在请求头中加一个特定的秘钥，请求才能通过，否则就是非法请求 => 权限验证")])])])]),l("li",null,[i("缓存相关的headers "),l("ul",null,[l("li",null,"Cache-Control"),l("li",null,"Expires"),l("li",null,"Last-Modified"),l("li",null,"IF-Modified-Since"),l("li",null,"Etag"),l("li",null,"If-None-Match")])]),l("li",null,[i("总结 "),l("ul",null,[l("li",null,[i("如果提问有哪些headers，需要分两步来讲 "),l("ol",null,[l("li",null,"浏览器自带的请求头和响应头"),l("li",null,"缓存的headers")])])])])],-1),r=t("",16),s=[n,h,r];function d(c,g,p,f,m,_){return u(),a("div",null,s)}const x=e(o,[["render",d]]);export{C as __pageData,x as default};
