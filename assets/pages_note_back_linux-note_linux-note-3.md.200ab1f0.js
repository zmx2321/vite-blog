import{_ as l,o as i,c as e,e as a}from"./app.ad0db7d6.js";const x=JSON.parse('{"title":"linux简单命令积累","description":"","frontmatter":{},"headers":[],"relativePath":"pages/note/back/linux-note/linux-note-3.md","filePath":"pages/note/back/linux-note/linux-note-3.md","lastUpdated":1700105199000}'),t={name:"pages/note/back/linux-note/linux-note-3.md"},o=a('<h1 id="linux简单命令积累" tabindex="-1">linux简单命令积累 <a class="header-anchor" href="#linux简单命令积累" aria-label="Permalink to &quot;linux简单命令积累&quot;">​</a></h1><h2 id="_1-如何使用cmder远程连接服务器" tabindex="-1">1. 如何使用cmder远程连接服务器 <a class="header-anchor" href="#_1-如何使用cmder远程连接服务器" aria-label="Permalink to &quot;1. 如何使用cmder远程连接服务器&quot;">​</a></h2><ul><li>如果有端口 <ul><li><code>ssh -p port user@ip</code></li><li>例：<code>ssh -p 233 zmx@192.168.0.64</code></li></ul></li><li>如果没有端口 <ul><li><code>ssh user@ip</code></li><li>例：<code>ssh zmx@192.168.0.64</code></li></ul></li></ul><h2 id="_2-测试linux是否能访问外网" tabindex="-1">2. 测试linux是否能访问外网 <a class="header-anchor" href="#_2-测试linux是否能访问外网" aria-label="Permalink to &quot;2. 测试linux是否能访问外网&quot;">​</a></h2><ul><li><code>curl -l http://www.baidu.com</code><ul><li>输出百度页面的HTML</li></ul></li><li><code>wget http://www.baidu.com</code><ul><li>下载百度页面并在当前文件夹保存为index</li></ul></li></ul><h2 id="_3-查看端口占用" tabindex="-1">3. 查看端口占用 <a class="header-anchor" href="#_3-查看端口占用" aria-label="Permalink to &quot;3. 查看端口占用&quot;">​</a></h2><ul><li><code>lsof -i:端口号</code><ul><li>用于查看某一端口的占用情况</li><li>例：<code>lsof -i:8000</code> 查看8000端口使用情况</li></ul></li></ul><h2 id="_4-查看nginx是否已经安装" tabindex="-1">4. 查看Nginx是否已经安装 <a class="header-anchor" href="#_4-查看nginx是否已经安装" aria-label="Permalink to &quot;4. 查看Nginx是否已经安装&quot;">​</a></h2><ol><li>查看进程列表</li></ol><blockquote><p>Linux每个应用运行都会产生一个进程，那么我们就可以通过查看Nginx进程是否存在来判断它是否启动。</p></blockquote><ul><li>用ps -ef列出进程列表，然后通过grep过滤 <ul><li><code>ps -ef | grep nginx</code></li></ul></li></ul><ol start="2"><li>查看Nginx的进程id</li></ol><ul><li><code>ps -C nginx -o pid</code></li></ul><h2 id="_5-传输文件" tabindex="-1">5. 传输文件 <a class="header-anchor" href="#_5-传输文件" aria-label="Permalink to &quot;5. 传输文件&quot;">​</a></h2><ul><li><code>scp -r -P port D:\\temp\\ zmx@ip:/usr/local/nginx/html</code></li></ul><h2 id="_6-删除非空文件夹" tabindex="-1">6. 删除非空文件夹 <a class="header-anchor" href="#_6-删除非空文件夹" aria-label="Permalink to &quot;6. 删除非空文件夹&quot;">​</a></h2><ul><li><code>rm -d -r xxx</code></li></ul><h2 id="_7-要将所有-jpeg的后缀名图片文件修改为-jpg文件" tabindex="-1">7. 要将所有 jpeg的后缀名图片文件修改为 jpg文件 <a class="header-anchor" href="#_7-要将所有-jpeg的后缀名图片文件修改为-jpg文件" aria-label="Permalink to &quot;7. 要将所有 jpeg的后缀名图片文件修改为 jpg文件&quot;">​</a></h2><ul><li><code>rename .jpeg .jpg *.jpeg</code></li></ul><h2 id="_8-centos7安装jenkins" tabindex="-1">8. centos7安装Jenkins <a class="header-anchor" href="#_8-centos7安装jenkins" aria-label="Permalink to &quot;8. centos7安装Jenkins&quot;">​</a></h2><ul><li>JAVA安装 <ul><li>yum list installed |grep java</li><li>yum -y list java* =&gt; 查看</li><li>yum install java-1.8.0-openjdk.x86_64 java-1.8.0-openjdk-devel.x86_64</li><li>java -version</li><li>ls /usr/lib/jvm/</li><li>vi /etc/profile =&gt; 修改配置信息</li><li>将下面的三行粘贴到 /etc/profile 中 <ul><li>export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.222.b10-1.el7_7.x86_64</li><li>export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</li><li>export PATH=$PATH:$JAVA_HOME/bin</li></ul></li><li>source /etc/profile =&gt; 立即生效</li><li>查看 <ul><li>echo $JAVA_HOME</li><li>echo $CLASSPATH</li><li>echo $PATH</li></ul></li></ul></li><li>安装jenkins <ul><li>官网yum形式不知道为啥无效</li><li>wget <a href="http://pkg.jenkins-ci.org/redhat-stable/jenkins-2.7.3-1.1.noarch.rpm" target="_blank" rel="noreferrer">http://pkg.jenkins-ci.org/redhat-stable/jenkins-2.7.3-1.1.noarch.rpm</a></li><li>rpm -ivh jenkins-2.7.3-1.1.noarch.rpm</li><li>vi /etc/sysconfig/jenkins =&gt; 改端口</li><li>启动jenkins服务 <ul><li>service jenkins start/stop/restart</li><li>systemctl stop jenkins</li><li>systemctl start jenkins</li></ul></li><li>cat /var/lib/jenkins/secrets/initialAdminPassword =&gt; 查看密码</li></ul></li></ul>',21),n=[o];function r(s,c,u,d,h,p){return i(),e("div",null,n)}const m=l(t,[["render",r]]);export{x as __pageData,m as default};
