import{_ as l,o as e,c as a,e as i}from"./app.e5ec5305.js";const g=JSON.parse('{"title":"Ubuntu部署服务","description":"","frontmatter":{},"headers":[],"relativePath":"pages/note/back/linux-note/linux-note-2.md","filePath":"pages/note/back/linux-note/linux-note-2.md","lastUpdated":1700105199000}'),s={name:"pages/note/back/linux-note/linux-note-2.md"},n=i(`<h1 id="ubuntu部署服务" tabindex="-1">Ubuntu部署服务 <a class="header-anchor" href="#ubuntu部署服务" aria-label="Permalink to &quot;Ubuntu部署服务&quot;">​</a></h1><h2 id="_1-服务器信息" tabindex="-1">1. 服务器信息 <a class="header-anchor" href="#_1-服务器信息" aria-label="Permalink to &quot;1. 服务器信息&quot;">​</a></h2><ul><li>服务器类型：Ubuntu</li><li>账号：test</li><li>密码：xxx</li><li>远程链接端口：222</li><li>链接远程服务器 <ul><li>ssh -p 222 <a href="mailto:test@192.168.0.146" target="_blank" rel="noreferrer">test@192.168.0.146</a> ---- xxx</li></ul></li></ul><h2 id="_2-部署项目服务" tabindex="-1">2. 部署项目服务 <a class="header-anchor" href="#_2-部署项目服务" aria-label="Permalink to &quot;2. 部署项目服务&quot;">​</a></h2><h3 id="_2-1-内容" tabindex="-1">2.1. 内容 <a class="header-anchor" href="#_2-1-内容" aria-label="Permalink to &quot;2.1. 内容&quot;">​</a></h3><ul><li>安装nginx</li><li>安装jdk</li><li>安装tomcat</li><li>安装mysql</li><li>mysql链接navicat</li></ul><h3 id="_2-2-安装nginx" tabindex="-1">2.2. 安装nginx <a class="header-anchor" href="#_2-2-安装nginx" aria-label="Permalink to &quot;2.2. 安装nginx&quot;">​</a></h3><ol><li><p>更新APT源</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">sudo apt-get update </span></span>
<span class="line"><span style="color:#e1e4e8;">sudo apt-get install nginx</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">sudo apt-get update </span></span>
<span class="line"><span style="color:#24292e;">sudo apt-get install nginx</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>修改配置文件</p><ul><li>/etc/nginx/nginx.conf 主配置文件</li><li>/etc/nginx/sites-enabled 配置端口 <ul><li>该目录下有一个default文件，修改默认端口名为6060</li><li>查看文件 cat nginx.conf</li><li>进入编辑模式 vi nginx.conf</li><li>按i键，在下方显示insert</li><li>按esc改变编辑状态</li><li>按:使光标停留在最后一行</li><li>输入wq!保存文档并退出编辑模式</li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">server { </span></span>
<span class="line"><span style="color:#e1e4e8;">  # 默认端口为80 </span></span>
<span class="line"><span style="color:#e1e4e8;">  listen 6060 default_server; </span></span>
<span class="line"><span style="color:#e1e4e8;">  listen [::]:6060 default_server;</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">  ......</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">server { </span></span>
<span class="line"><span style="color:#24292e;">  # 默认端口为80 </span></span>
<span class="line"><span style="color:#24292e;">  listen 6060 default_server; </span></span>
<span class="line"><span style="color:#24292e;">  listen [::]:6060 default_server;</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">  ......</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li></ul></li><li><p>重启nginx</p><ul><li><code>sudo service nginx reload</code></li></ul></li><li><p>将项目放入nginx服务</p><ul><li>nginx的根目录文件夹地址为<code>/var/www/html</code></li><li>nginx访问的地址为<code>ip:6060/文件名</code></li><li><code>scp -r -P 222 D:\\sf\\test test@192.168.0.146.146:/home/myspace</code><ul><li>由于权限原因，首先要先将文件传入&#39;/home/myspace&#39;文件夹下(xxx)</li><li>p要大写</li></ul></li><li>将myspace根目录下的文件剪切到nginx服务下 <ul><li>cd ~</li><li><code>mv test /var/www/html</code></li></ul></li></ul></li><li><p>其它相关帮助</p><ul><li><code>/usr/sbin/nginx</code> =&gt; 主程序</li><li><code>sudo /usr/sbin/nginx -t</code> =&gt; 查看是否安装完成</li><li><code>/etc/nginx</code> =&gt; 配置文件目录,所有的nginx配置文件都在这里</li><li><code>/etc/nginx/nginx.conf</code> =&gt; 主配置文件</li><li><code>/var/log/nginx/access.log</code> =&gt; 每一个访问请求都会记录在这个文件中，除非你做了其它设置</li><li><code>/var/log/nginx/error.log</code> =&gt; 任何Nginx的错误信息都会记录到这个文件中</li><li>常用命令<div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">sudo service nginx {start|stop|restart|reload|force- reload|status|configtest|rotate|upgrade}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">sudo service nginx {start|stop|restart|reload|force- reload|status|configtest|rotate|upgrade}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li></ul></li></ol><h3 id="_2-3-安装jdk" tabindex="-1">2.3. 安装jdk <a class="header-anchor" href="#_2-3-安装jdk" aria-label="Permalink to &quot;2.3. 安装jdk&quot;">​</a></h3><ol><li>查看本机是否安装了jre <ul><li>输入 java</li></ul></li><li>安装jre <ul><li><code>sudo apt install openjdk-8-jre-headless</code></li></ul></li><li>安装jdk <ul><li><code>sudo apt install openjdk-8-jdk-headless</code></li><li>使用 javac 命令检测jdk是否安装成功</li></ul></li></ol><h3 id="_2-4-安装tomcat" tabindex="-1">2.4. 安装tomcat <a class="header-anchor" href="#_2-4-安装tomcat" aria-label="Permalink to &quot;2.4. 安装tomcat&quot;">​</a></h3><ol><li>创建tomcat文件夹 <ul><li>进入到 /usr/local/ 文件夹下 =&gt; <code>cd /usr/local/</code></li><li>创建tomcat文件夹 =&gt; <code>sudo mkdir tomcat</code></li></ul></li><li>在apache官网下载对应apache-tomcat-9.0.29.tar.gz版本</li><li>传输apache-tomcat-9.0.29.tar.gz文件 <ul><li>传输apache-tomcat-9.0.29.tar.gz文件夹到 ~</li><li><code>scp -r -P 222 D:\\sf\\apache-tomcat-9.0.29.tar.gz test@192.168.0.146:/home/myspace</code></li><li>剪切到 /usr/local/mydata 目录下 <ul><li>cd ~</li><li>sudo mv apache-tomcat-9.0.29.tar.gz /usr/local/tomcat</li></ul></li></ul></li><li>安装tomcat <ul><li>解压apache-tomcat-9.0.29.tar.gz文件 <ul><li><code>sudo tar -zxvf apache-tomcat-9.0.29.tar.gz</code></li></ul></li><li>修改权限 <ul><li><code>sudo chmod 755 -R apache-tomcat-9.0.29</code></li></ul></li><li>修改配置文件 <ul><li><code>cd apache-tomcat-9.0.29/conf</code></li><li><code>vi service.xml</code> =&gt; 编辑具体指令详见nginx配置</li></ul></li><li>复制war包到webapps目录下 <ul><li><code>scp -r -P 222 D:\\sf\\test.war test@192.168.0.146:/home/myspace</code></li></ul></li><li>剪切文件到webapps目录下 <ul><li><code>sudo mv test.war /usr/local/tomcat/apache-tomcat- 9.0.29/webapps/</code></li></ul></li><li>启动tomcat <ul><li><code>cd apache-tomcat-9.0.29</code></li><li><code>cd bin</code></li><li><code>./startup.sh</code></li></ul></li></ul></li></ol><h3 id="_2-5-安装mysql" tabindex="-1">2.5. 安装mysql <a class="header-anchor" href="#_2-5-安装mysql" aria-label="Permalink to &quot;2.5. 安装mysql&quot;">​</a></h3><ol><li>访问源列表里的每个网址，并读取软件列表，然后保存在本地电脑 <ul><li>sudo apt-get update</li></ul></li><li>开始安装mysql <ul><li><code>sudo apt-get install mysql-server</code></li></ul></li><li>安装过程中会出现一个界面提示输入root用户的密码，这里输入root</li><li>一会又出来一个界面，提示再次输入root用户的密码</li><li>等待一会就安装完成了</li><li>验证 <ul><li><code>mysql -u root -p</code></li><li>进入mysql界面</li><li>mysql&gt; show databases;</li></ul></li></ol><h3 id="_2-6-mysql链接navicat" tabindex="-1">2.6. mysql链接navicat <a class="header-anchor" href="#_2-6-mysql链接navicat" aria-label="Permalink to &quot;2.6. mysql链接navicat&quot;">​</a></h3><ol><li>配置ufw或iptables，开放端口或关闭防火墙 <ul><li><code>sudo ufw allow 端口号/tcp（允许连接）</code></li><li>ssh（22）/ MySQL（3306）</li><li>启用UFW <ul><li>sudo ufw enable</li></ul></li><li>检查UFW状态和规则 <ul><li>sudo ufw status verbose</li></ul></li></ul></li><li>授权 <ul><li><code>mysql -u root -p</code> =&gt; 登陆</li><li><code>grant all privileges on *.* to root@&quot;%&quot; identified by &#39;root&#39;</code><ul><li>grant是授权命令，其中root是连接用的用户名、&#39;root&#39;是 数据库密码，用户名后面的“%”通用符表示 允许各host</li></ul></li></ul></li><li>修改MySql配置文件 <ul><li><code>cd /etc/mysql/mysql.conf.d</code></li><li><code>sudo vim mysqld.cnf</code><ul><li><code>找到bind-address=127.0.0.1并注释，MySql就可以开启远程访问了</code></li></ul></li></ul></li><li>重启mysql服务 <ul><li>sudo service mysql restart</li></ul></li></ol><h2 id="_3-其他" tabindex="-1">3. 其他 <a class="header-anchor" href="#_3-其他" aria-label="Permalink to &quot;3. 其他&quot;">​</a></h2><h3 id="_3-1-防火墙" tabindex="-1">3.1. 防火墙 <a class="header-anchor" href="#_3-1-防火墙" aria-label="Permalink to &quot;3.1. 防火墙&quot;">​</a></h3><ul><li>有时候防火墙开启无法访问nginx服务</li><li>查看防火墙的状态 <ul><li><code>systemctl status firewalld.service</code></li><li>或者 <code>systemctl status firewalld</code></li><li>active(running)表示防火墙开启</li></ul></li><li>关闭防火墙 <ul><li><code>systemctl stop firewalld.service</code></li><li>或者 <code>systemctl stop firewalld</code></li></ul></li><li>开启防火墙 <ul><li><code>systemctl start firewalld.service</code></li><li>或者 <code>systemctl status firewalld</code></li></ul></li><li>前面的方法，一旦重启操作系统，防火墙就自动开启了 <ul><li><code>systemctl disable firewalld.service</code>，开机禁止防火墙服务器</li><li><code>systemctl enable firewalld.service</code>，开机启动防火墙服务器</li></ul></li></ul>`,19),t=[n];function o(c,d,r,p,u,m){return e(),a("div",null,t)}const b=l(s,[["render",o]]);export{g as __pageData,b as default};
//# sourceMappingURL=pages_note_back_linux-note_linux-note-2.md.1ff10d24.js.map
