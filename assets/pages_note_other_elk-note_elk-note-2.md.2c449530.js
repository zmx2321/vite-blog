import{_ as s,o as a,c as n,e as l}from"./app.0383e3b0.js";const d=JSON.parse('{"title":"kibana的使用","description":"","frontmatter":{},"headers":[],"relativePath":"pages/note/other/elk-note/elk-note-2.md","filePath":"pages/note/other/elk-note/elk-note-2.md","lastUpdated":1700115938000}'),p={name:"pages/note/other/elk-note/elk-note-2.md"},o=l(`<h1 id="kibana的使用" tabindex="-1">kibana的使用 <a class="header-anchor" href="#kibana的使用" aria-label="Permalink to &quot;kibana的使用&quot;">​</a></h1><h2 id="_1-elasticsearch注意情况" tabindex="-1">1. ElasticSearch注意情况 <a class="header-anchor" href="#_1-elasticsearch注意情况" aria-label="Permalink to &quot;1. ElasticSearch注意情况&quot;">​</a></h2><ul><li>我们的数据是存储在ElasticSearch里的，因为要做数据分析，因为要做数据分析，所以在ES里的数据需要是结构化的，不要是一大段没有结构的文本，这样是无法进行分析的 。</li></ul><div style="width:523px;height:255px;"><img src="https://zmx2321.github.io/vite-blog/images/note/other/elk-note/es_use.jpg" style="width:100%;height:100%;"></div><ul><li>注意字段是否有分词的情况 <ul><li>如果一个字段的type是text而不是keyword，就有可能会影响统计</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 字段source: 央视新闻</span></span>
<span class="line"><span style="color:#6A737D;">// 类型为text</span></span>
<span class="line"><span style="color:#9ECBFF;">&#39;source&#39;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&#39;analyzer&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;ik_max_word&#39;</span><span style="color:#E1E4E8;">,  </span><span style="color:#6A737D;">// 一个分词的操作</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&#39;type&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;text&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; 央视、新闻 =&gt; 在正常情况下，会分为两个词，然后单独地进行统计，然后统计四个字的时候，可能会获取不到</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 其中一个解决办法</span></span>
<span class="line"><span style="color:#6A737D;">// 给这个字段加一个扩展类型，类型为keyword</span></span>
<span class="line"><span style="color:#9ECBFF;">&#39;source&#39;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&#39;analyzer&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;ik_max_word&#39;</span><span style="color:#E1E4E8;">,  </span><span style="color:#6A737D;">// 一个分词的操作</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&#39;type&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;text&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&#39;fields&#39;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 这个名字可以随意定义</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;keyword1&#39;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&#39;type&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;keyword&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// =&gt; source.keyword =&gt; 央视新闻</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 字段source: 央视新闻</span></span>
<span class="line"><span style="color:#6A737D;">// 类型为text</span></span>
<span class="line"><span style="color:#032F62;">&#39;source&#39;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;analyzer&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;ik_max_word&#39;</span><span style="color:#24292E;">,  </span><span style="color:#6A737D;">// 一个分词的操作</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;type&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;text&#39;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; 央视、新闻 =&gt; 在正常情况下，会分为两个词，然后单独地进行统计，然后统计四个字的时候，可能会获取不到</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 其中一个解决办法</span></span>
<span class="line"><span style="color:#6A737D;">// 给这个字段加一个扩展类型，类型为keyword</span></span>
<span class="line"><span style="color:#032F62;">&#39;source&#39;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;analyzer&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;ik_max_word&#39;</span><span style="color:#24292E;">,  </span><span style="color:#6A737D;">// 一个分词的操作</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;type&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;text&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;fields&#39;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 这个名字可以随意定义</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;keyword1&#39;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&#39;type&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;keyword&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// =&gt; source.keyword =&gt; 央视新闻</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div></li></ul><h2 id="_2-kibana使用前期准备" tabindex="-1">2. kibana使用前期准备 <a class="header-anchor" href="#_2-kibana使用前期准备" aria-label="Permalink to &quot;2. kibana使用前期准备&quot;">​</a></h2><h3 id="_2-1-准备测试数据" tabindex="-1">2.1. 准备测试数据 <a class="header-anchor" href="#_2-1-准备测试数据" aria-label="Permalink to &quot;2.1. 准备测试数据&quot;">​</a></h3><ul><li><p>威廉·莎士比亚全集</p><ul><li><code>wget https://download.elastic.co/demos/kibana/gettingstarted/shakespeare_6.0.json</code></li></ul></li><li><p>一组虚构的账户与随机生成的数据</p><ul><li><code>wget https://download.elastic.co/demos/kibana/gettingstarted/accounts.zip</code></li></ul></li><li><p>一组随机生成的日志文件</p><ul><li><code>wget https://download.elastic.co/demos/kibana/gettingstarted/logs.json.gz</code></li></ul><h3 id="_2-2-kibana创建图表的流程" tabindex="-1">2.2 kibana创建图表的流程 <a class="header-anchor" href="#_2-2-kibana创建图表的流程" aria-label="Permalink to &quot;2.2 kibana创建图表的流程&quot;">​</a></h3><ol><li>准备数据</li><li>创建mapping</li></ol><ul><li>在开发工具中创建</li><li>之后确认mapping <ul><li><code>GET /.kibana_1/_mapping</code></li></ul></li></ul><ol start="3"><li>导入数据</li></ol><ul><li>导入之后需要确认数据 <ul><li><code>GET /.kibana_1/_search</code></li></ul></li></ul><ol start="4"><li>创建索引模式</li></ol><ul><li>在管理操作界面Management，在Kibana栏目下，点击第一个，即索引模式</li><li>索引模式输入框中，我们可以使用通配符*调取所有与其前缀相关的索引</li><li>创建成功后，可以在页面上看出，可以被检索的字段，与可以被统计的字段等</li></ul><ol start="5"><li>设计图表</li></ol><ul><li>进Discover中，可以探索一下数据</li><li>根据筛选查出数据</li></ul><ol start="6"><li>制作图表完成工作</li></ol><ul><li>进入到Visualize中进行图表创作</li><li>点击创建图表 =&gt; 选择图表类型 =&gt; 选择数据集</li><li>选择x轴 =&gt; 选择聚合(关键字或者日期等) =&gt; 选择字段</li><li>顺序=&gt;表示升序或者降序、大小=&gt;表示当前一共显示多少个柱状图</li><li>左上角点击保存，Visualize中就可以看到结果了</li><li>我们可以在Visualize中的图表基础上继续创作</li><li>可以进入仪表台里面来管理多个图表</li></ul></li></ul><h3 id="_2-3-kibana主界面菜单栏" tabindex="-1">2.3. kibana主界面菜单栏 <a class="header-anchor" href="#_2-3-kibana主界面菜单栏" aria-label="Permalink to &quot;2.3. kibana主界面菜单栏&quot;">​</a></h3><ul><li>Discover - 数据探索 <ul><li>左侧菜单栏可以选择已经创建的索引模式</li><li>菜单选择下面可用字段中左边的图标表示字段类型，地球标志的图标表示坐标类型的数据</li></ul></li><li>Visualize - 图表创作</li><li>Dashboard - 仪表台 <ul><li>可以把很多图表组合为一个大的仪表台</li><li>通俗来讲，仪表台可能类似汽车上的速度表、流量表等</li><li>我们先单独地去制作一个个单独地仪表，然后再在仪表台里面将他们组合起来</li></ul></li><li>Timelion <ul><li>时序模式，高级一点的时序图表会用到这个</li></ul></li><li>Machine Learning <ul><li>机器学习，使用kibana创建一些机器学习的操作等</li></ul></li><li>Graph <ul><li>图能力，探索ES里面的数据关联等</li></ul></li><li>Dev Tools <ul><li>开发者工具，在这里可以和ES进行相互操作</li></ul></li><li>Monitoring <ul><li>监控，主要是对elk系统中，已经加入链接的ElasticSearch以及Logstash的运行状况等进行监控</li></ul></li><li>Management <ul><li>管理操作，例如用户权限，kibana的索引模式，已保存的图表管理、高级设置等</li></ul></li></ul><h2 id="_3-kibana使用示例" tabindex="-1">3. kibana使用示例 <a class="header-anchor" href="#_3-kibana使用示例" aria-label="Permalink to &quot;3. kibana使用示例&quot;">​</a></h2><h3 id="_3-1-威廉·莎士比亚全集" tabindex="-1">3.1. 威廉·莎士比亚全集 <a class="header-anchor" href="#_3-1-威廉·莎士比亚全集" aria-label="Permalink to &quot;3.1. 威廉·莎士比亚全集&quot;">​</a></h3><ol><li>下载</li></ol><ul><li><code>wget https://download.elastic.co/demos/kibana/gettingstarted/shakespeare_6.0.json</code></li></ul><ol start="2"><li>创建mapping</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">PUT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">shakespeare</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;mappings&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;doc&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;properties&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;speaker&quot;</span><span style="color:#E1E4E8;">: {</span><span style="color:#9ECBFF;">&quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;keyword&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;play_name&quot;</span><span style="color:#E1E4E8;">: {</span><span style="color:#9ECBFF;">&quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;keyword&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;line_id&quot;</span><span style="color:#E1E4E8;">: {</span><span style="color:#9ECBFF;">&quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;integer&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;speech_number&quot;</span><span style="color:#E1E4E8;">: {</span><span style="color:#9ECBFF;">&quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;integer&quot;</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">PUT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">shakespeare</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;mappings&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;doc&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;properties&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;speaker&quot;</span><span style="color:#24292E;">: {</span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;keyword&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;play_name&quot;</span><span style="color:#24292E;">: {</span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;keyword&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;line_id&quot;</span><span style="color:#24292E;">: {</span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;integer&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;speech_number&quot;</span><span style="color:#24292E;">: {</span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;integer&quot;</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ol start="3"><li>导入数据</li></ol><ul><li><code>curl -H &#39;Content-Type: application/x-ndjson&#39; -XPOST &#39;http://elasticserver:9200/shakespeare/doc/_bulk?pretty&#39; -u elktest[自己的账号] --data-binary @/download/shakespeare_6.0.json</code></li></ul><ol start="4"><li>确认mapping</li></ol><ul><li><code>GET /shakespeare/_mapping</code></li></ul><ol start="5"><li>确认数据</li></ol><ul><li><code>GET /shakespeare/_search</code></li></ul><h3 id="_3-2-一组虚构的账户与随机生成的数据" tabindex="-1">3.2. 一组虚构的账户与随机生成的数据 <a class="header-anchor" href="#_3-2-一组虚构的账户与随机生成的数据" aria-label="Permalink to &quot;3.2. 一组虚构的账户与随机生成的数据&quot;">​</a></h3><blockquote><p>本示例无需创建mapping</p></blockquote><ol><li>下载</li></ol><ul><li><code>wget https://download.elastic.co/demos/kibana/gettingstarted/accounts.zip</code></li></ul><ol start="2"><li>解压缩</li></ol><ul><li><code>unzip accounts.zip</code><ul><li><code>yum install zip unzip</code></li></ul></li></ul><ol start="3"><li>导入数据</li></ol><ul><li><code>curl -H &#39;Content-Type: application/x-ndjson&#39; -XPOST &#39;http://elasticserver:9200/bank/account/_bulk?pretty&#39; -u elktest[自己的账号] --data-binary @/download/accounts.json</code></li></ul><ol start="4"><li>确认mapping</li></ol><ul><li><code>GET /account/_mapping</code></li></ul><ol start="5"><li>确认数据</li></ol><ul><li><code>GET /account/_search</code></li></ul><ol start="6"><li>进入到Management中创建索引模式</li></ol><ul><li>bank</li><li>可以看到有些字段可以被统计等信息</li></ul><ol start="7"><li>进入到Discover查看数据情况</li></ol><ul><li>进入到bank，看到有数据了</li></ul><ol start="8"><li>分析字段，设计需要制作的图表 - 饼图</li><li>进入到Visualize进行图表制作</li></ol><ul><li>创建一个饼图</li><li>选择索引模式-bank</li><li>点击Split来分割</li><li>分割的依据Aggregation选择range区间模式</li><li>分割的字段field，选择***(balance)</li><li>分成若干个区间(1-10, 10-20，...)</li><li>图表生成后，可以基于当前图表创建一个新的图表</li><li>点击add sub-buckets创建外围扩展图</li><li>选择切片类型</li><li>sub Aggregation聚合选择terms</li><li>选择字段age</li></ul><h3 id="_3-3-一组随机生成的日志文件" tabindex="-1">3.3. 一组随机生成的日志文件 <a class="header-anchor" href="#_3-3-一组随机生成的日志文件" aria-label="Permalink to &quot;3.3. 一组随机生成的日志文件&quot;">​</a></h3><blockquote><p>主要取其中的经纬度</p></blockquote><ol><li>下载</li></ol><ul><li><code>wget https://download.elastic.co/demos/kibana/gettingstarted/logs.jsonl.gz</code></li></ul><ol start="2"><li>解压缩</li></ol><ul><li><code>gunzip logs.jsonl.gz</code></li></ul><ol start="3"><li>创建mapping</li></ol><blockquote><p>可以直接在kibana里面的开发工具直接运行</p></blockquote><ul><li>创建mapping-1</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">PUT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">logstash</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">2015.05</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">18</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;mappings&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;log&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;properties&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;geo&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">&quot;properties&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;coordinates&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#9ECBFF;">&quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;geo_point&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">          }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">PUT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">logstash</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">2015.05</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">18</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;mappings&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;log&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;properties&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;geo&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#032F62;">&quot;properties&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;coordinates&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;geo_point&quot;</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">          }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><ul><li>创建mapping-2</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">PUT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">logstash</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">2015.05</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">19</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;mappings&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;log&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;properties&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;geo&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">&quot;properties&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;coordinates&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#9ECBFF;">&quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;geo_point&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">          }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">PUT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">logstash</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">2015.05</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">19</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;mappings&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;log&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;properties&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;geo&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#032F62;">&quot;properties&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;coordinates&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;geo_point&quot;</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">          }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><ul><li>创建mapping-3</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">PUT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">logstash</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">2015.05</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">20</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;mappings&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;log&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;properties&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;geo&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">&quot;properties&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;coordinates&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#9ECBFF;">&quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;geo_point&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">          }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">PUT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">logstash</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">2015.05</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">20</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;mappings&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;log&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;properties&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;geo&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#032F62;">&quot;properties&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;coordinates&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;geo_point&quot;</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">          }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><ol start="4"><li>导入数据</li></ol><ul><li><code>curl -H &#39;Content-Type: application/x-ndjson&#39; -XPOST &#39;&#39;http://elasticserver:9200/_bulk?pretty&#39; -u elktest[自己的账号] --data-binary @/download/logs.jsonl</code></li></ul><ol start="5"><li>确认mapping</li></ol><ul><li><code>GET /logstash-2015.05.20/_mapping</code></li></ul><ol start="6"><li>确认数据</li></ol><ul><li><code>GET /logstash-2015.05.20/_search</code></li></ul><ol start="7"><li>创建索引模式</li></ol><ul><li>这时候要用通配符了，因为有三个索引</li><li>logstash-2015.05*</li><li>更改字段(例如时间)</li></ul><ol start="8"><li>进入Visualize创建图表</li></ol><ul><li>选择地图图表</li><li>选择索引模式</li><li>点击右上角选择时间范围(因为日志数据在2015)</li><li>左侧栏，选择坐标作为依据，选择坐标字段</li><li>运行之后就可以看到地图上显示了坐标点</li></ul><h2 id="_4-将kibana以iframe的方式嵌入" tabindex="-1">4. 将kibana以iframe的方式嵌入 <a class="header-anchor" href="#_4-将kibana以iframe的方式嵌入" aria-label="Permalink to &quot;4. 将kibana以iframe的方式嵌入&quot;">​</a></h2><ul><li>进入Visualize或者Dashboard，点击共享</li><li>固定链接中会带菜单栏和头部</li><li>点击嵌入代码，不选择短url，生成的页面是只带图表的 <ul><li>在链接中，修改其参数可以修改图表，包括样式</li></ul></li><li>快照和嵌入代码 <ul><li>snapshot是个快照，snapshot不会随着服务器的配置而更新， 因此snapshot把当前dashboard的配置都加到url的query参数里了</li><li>saved 只有dashboard的访问url， 具体配置参数不传递， 根据kibana服务器的即时配置来返回结果呈现给用户</li><li>通过snapshot和saved的对比， 我们可以推测kibana的过滤和搜索传递的参数方式</li></ul></li></ul><h2 id="_5-kibana的dashboard内嵌到web中的定制化问题" tabindex="-1">5. kibana的dashboard内嵌到web中的定制化问题 <a class="header-anchor" href="#_5-kibana的dashboard内嵌到web中的定制化问题" aria-label="Permalink to &quot;5. kibana的dashboard内嵌到web中的定制化问题&quot;">​</a></h2><ul><li>2个通用的需求： <ol><li>去掉AddFilter按钮</li></ol><ul><li>因为跨域访问的问题， 导致外层无法访问iframe内部的contentwindow等元素， 也就失去了控制子元素显示或隐藏的机会</li><li>最终通过修改kibana前端源码完成， 具体到XXX:\\Bitnami\\elk-6.2.3-0\\kibana\\optimize\\bundles\\commons.style.css</li><li>找到&quot;.filter-bar&quot;， 添加display:none即可</li></ul><ol start="2"><li>自定义传参过滤或者搜索</li></ol><ul><li>这个需要仔细分析kibana的dashboard的share的两者方式的不同处</li></ul></li><li>了解生成的iframe地址中参数的意义 <ul><li>示例地址 <ul><li><code>http://192.168.2.240:5601/goto/ab0deee9d5440c185aed952efa11c5c2?embed=true&amp;_g=()</code></li><li><code>http://192.168.2.240:5601/app/kibana#/dashboard/df0384c0-87cc-11eb-9a4c-c78247994cce?embed=true&amp;_g=(filters:!(),refreshInterval:(pause:!t,value:0),time:(from:&#39;2021-02-28T16:00:00.000Z&#39;,to:&#39;2021-03-31T16:00:00.000Z&#39;))&amp;_a=(description:&#39;&#39;,filters:!(),fullScreenMode:!f,options:(hidePanelTitles:!f,useMargins:!t),panels:!((embeddableConfig:(),gridData:(h:15,i:&#39;1&#39;,w:24,x:24,y:0),id:&#39;1ef68cb0-87ca-11eb-9a4c-c78247994cce&#39;,panelIndex:&#39;1&#39;,type:visualization,version:&#39;7.1.1&#39;),(embeddableConfig:(),gridData:(h:15,i:&#39;2&#39;,w:24,x:0,y:0),id:a62a4bc0-87cc-11eb-9a4c-c78247994cce,panelIndex:&#39;2&#39;,type:visualization,version:&#39;7.1.1&#39;)),query:(language:kuery,query:&#39;&#39;),timeRestore:!f,title:zmx_test%E4%BB%AA%E8%A1%A8%E7%9B%98,viewMode:view)</code></li></ul></li><li>ab0deee9d5440c185aed952efa11c5c2 =&gt; 表示dashboard的_id</li><li>embed=true =&gt; 代表内嵌到web中， 即只有dashboard，没有kibana的左边导航栏等</li><li>_a 传递了具体的配置的参数， 内部有filter和query等 <ul><li>_a内每次大括号类似json对象的花括号，因此层次不能省略</li></ul></li><li>filters:!(）内就是具体过滤的配置， 效果就是AddFilter按钮上变成了具体的过滤值。 <ul><li>比如我们添加systemid为123456789012的过滤，拼成的过滤url字符串简化掉不需要的参数为<code>filters:!((meta:(),query:(match:(systemID.keyword:(query:&#39;123456789012&#39;,type:phrase)))))</code></li><li>最终形成<code>xxxx/?_g= ()&amp;_a=(filters:!((meta:(),query:(match:(systemID.keyword:(query:&#39;123456789012&#39;,type:phrase))))))</code></li></ul></li><li>_g()之前是原始的dashboard的url， 后面_a是我们添加的过滤url <ul><li>_g也有2个关键的字段， refreshInterval和time</li><li>refreshInterval控制是否自动刷新以及刷新频率</li><li>time设置dashboard的时间范围from和to，时间间隔interval， 以及时区设置timezone，保证时间轴的时间显示正确</li></ul></li><li>query:(match:(systemID.keyword:(query:&#39;123456789012&#39;,type:phrase))) 是filter里最关键的字符串， 类似json</li></ul><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 类似es的queryDSL语句。我们修改sytemId.keyword 和12345679012为我们真正动态改变的字段和值即可</span></span>
<span class="line"><span style="color:#6A737D;">// filter是查询完成后再过滤，query是直接查询</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;query&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">&quot;match&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">&quot;systemID.keyword&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">&quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;phrase&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">&quot;query&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;123456789012&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">     }</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 通过query实现特定数据的方法如下</span></span>
<span class="line"><span style="color:#6A737D;">// http://localhost:81/elk/app/kibana#/dashboard/de8df1e0-58a6-11e8-aa0c-7db6a9fbe317?embed=true &amp; _g=() &amp; _a=(query:(language:lucene,query:&#39;systemID.keyword:123456789012&#39;))</span></span>
<span class="line"><span style="color:#6A737D;">// 同样的我们动态修改 &quot;systemID.keyword:123456789012&quot; 为我们具体的field和value即可</span></span>
<span class="line"><span style="color:#6A737D;">// query的语句类似为</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;query&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;language&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;lucene&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;query&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;systemID.keyword:123456789012&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 类似es的queryDSL语句。我们修改sytemId.keyword 和12345679012为我们真正动态改变的字段和值即可</span></span>
<span class="line"><span style="color:#6A737D;">// filter是查询完成后再过滤，query是直接查询</span></span>
<span class="line"><span style="color:#032F62;">&quot;query&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#005CC5;">&quot;match&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#005CC5;">&quot;systemID.keyword&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#005CC5;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;phrase&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#005CC5;">&quot;query&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;123456789012&quot;</span></span>
<span class="line"><span style="color:#24292E;">     }</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 通过query实现特定数据的方法如下</span></span>
<span class="line"><span style="color:#6A737D;">// http://localhost:81/elk/app/kibana#/dashboard/de8df1e0-58a6-11e8-aa0c-7db6a9fbe317?embed=true &amp; _g=() &amp; _a=(query:(language:lucene,query:&#39;systemID.keyword:123456789012&#39;))</span></span>
<span class="line"><span style="color:#6A737D;">// 同样的我们动态修改 &quot;systemID.keyword:123456789012&quot; 为我们具体的field和value即可</span></span>
<span class="line"><span style="color:#6A737D;">// query的语句类似为</span></span>
<span class="line"><span style="color:#032F62;">&quot;query&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;language&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;lucene&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;query&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;systemID.keyword:123456789012&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div></li></ul>`,68),e=[o];function t(r,c,i,E,y,u){return a(),n("div",null,e)}const q=s(p,[["render",t]]);export{d as __pageData,q as default};
